{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/utils/getKey.js","../node_modules/composi/lib/utils/mixin.js","../node_modules/composi/lib/utils/setProps.js","../node_modules/composi/lib/utils/createElement.js","../node_modules/composi/lib/utils/createNode.js","../node_modules/composi/lib/utils/removeElement.js","../node_modules/composi/lib/patch.js","../node_modules/composi/lib/utils/updateElement.js","../node_modules/composi/lib/component.js","../dev/components/hero-search.js","../dev/components/hero-dashboard.js","../dev/components/hero-list.js","../dev/components/hero-detail.js","../node_modules/composi-router/index.js","../dev/components/title.js","../dev/components/menu.js","../dev/app.js","../dev/components/app.js","../dev/utils/routes.js","../dev/utils/fetch-heroes.js"],"sourcesContent":["/**\n * @description Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type - The name of the HTML or SVG tag to create.\n * @param {object} props - And object of property/value pairs.\n * @param {string|number|boolean|any[]} args - Any child elements.\n * @returns {object} A virtual node describing an element.\n * @example Virtual node with string as content:\n * const title = h('h1', {class: 'main-title'}, 'This is the Titel!')\n * @example Virtual node with children:\n * const list = h(\n *   'ul',\n *   {class: 'list'},\n *   [\n *     h('li', {}, 'One'),\n *     h('li', {}, 'Two'),\n *     h('li', {}, 'Three')\n *   ]\n * )\n */\nexport function h(type, props, ...args) {\n  let node\n  const children = []\n\n  // Go thru args from front to back.\n  while (args.length) {\n    // If child is array, process.\n    if (Array.isArray((node = args.shift()))) {\n      node.map(item => args.push(item))\n    // Else check if child is string or number.\n    } else if (node != null && typeof node !== 'boolean') {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  if (typeof type === 'string') {\n    return {type, props: props || {}, children } \n  } else {\n    return type(props || {}, children)\n  }\n}\n","/**\n * @description Function to get a node's key.\n * @param {object} node A virtual node.\n * @returns {string|number} key\n */\nexport function getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n","/**\n * @description A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {object} obj1 The first object to merge.\n * @param {object} obj2 The second object to merge.\n * @returns {object} obj1 Returns the first parameter.\n */\nexport function mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n","import {mixin} from './mixin'\n\n/**\n * @description Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n * @returns void\n */\nexport function setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style' && typeof value !== 'string') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = value[name] + \"\" || ''\n    }\n  } else {\n    if (value === 0) value = value + \"\"\n    // Handle cases where 'className' is used:\n    if (name === 'className') name = 'class'\n    /// Handle cases where inline event is camel cased:\n    if (name[0]=='o' && name[1]=='n') name = name.toLowerCase()\n    if (name === 'dangerouslySetInnerHTML') {\n      element.innerHTML = value\n      return\n    }\n    // Cannot set SVG properties this way, so test:\n    if (element.namespaceURI !== 'http://www.w3.org/2000/svg') element[name] = value\n\n    // In case of inline events, value would be function.\n    // This avoids resetting them if they were set above as a property.\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n          element.setAttribute('href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n","import {createNode} from './createNode'\n\n/**\n * @description Function to convert hyperscript/JSX into DOM nodes.\n * @param {Function} node A node to create. This may be a hyperscript function or a JSX tag which gets converted to hyperscript during transpilation.\n * @param {boolean} isSVG Whether the node is SVG or not.\n * @returns {Element} \n */\nexport function createElement(node, isSVG) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, isSVG)\n}\n","import {createElement} from './createElement'\nimport {setProps} from './setProps'\n\n/**\n * @description Function to create an HTML or SVG node.\n * @param {object} node A virtual node object defining an element to be created.\n * @param {boolean} isSVG Whether the node is SVG or not.\n * @returns {Element}\n */\nexport function createNode(node, isSVG) {\n  let element\n  if (isSVG = isSVG || node.type === 'svg') {\n    element = document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  } else {\n    element = document.createElement(node.type)\n  }\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, isSVG)))\n  return element\n}\n","/**\n * @description Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n * @returns {undefined} void\n */\nexport const removeElement = (container, element) => container.removeChild(element)\n","import {getKey} from './utils/getKey'\nimport {createElement} from './utils/createElement'\nimport {updateElement} from './utils/updateElement'\nimport {removeElement} from './utils/removeElement'\n\n/**\n * @constructor \n * @param {Object|undefined|null} oldNode Virtual node defining original node or null.\n * @param {object} newNode A virtual node defining the new node.\n * @param {Element|undefined} element The component root element.\n * @param {Element} container The container element in which component is rendered.\n * @returns {Element}\n */\nexport function patch(oldNode, newNode, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, newNode)\n}\n\n/**\n * @description Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {Element} container \n * @param {Element|undefined} element \n * @param {object} oldNode \n * @param {object} newNode \n * @param {boolean} isSVG \n * @param {object} nextSibling \n * @returns {Element}\n */\nfunction diffAndPatch(container, element, oldNode, newNode, isSVG, nextSibling) {\n  // There is no oldNode, so this is first render.\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(newNode, isSVG), element)\n  // There's an oldNode, so patch.\n  } else if (newNode.type != null && newNode.type === oldNode.type) {\n    updateElement(element, oldNode.props, newNode.props)\n\n    isSVG = isSVG || newNode.type === \"svg\"\n    const len = newNode.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = newNode.children[j]\n      let oldKey = getKey(oldChild)\n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, isSVG)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, isSVG) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, isSVG) : diffAndPatch(element, oldElement, null, newChild, isSVG)\n        \n        keyed[newKey] = newChild\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && newNode !== element.nodeValue) {\n    if (typeof newNode === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = newNode\n    } else {\n      element = container.insertBefore(\n        createElement(newNode, isSVG),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","import {mixin} from './mixin'\nimport {setProps} from './setProps'\n\n/**\n * @description Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n * @returns {undefined} void\n */\nexport function updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './utils/mixin'\n\n/**\n * @description A cross-browser normalization/polyfill for requestAnimationFrame.\n */\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @description This is a Time Object used as a key to create a pseudo-private property in the Component class for holding state.\n * @type {Object} dataStore A Date object to use as pseudo-private key to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @description Component can be instantiated with the new keyword, or extended to create a custom version of the class.\n * @class Class to create a component.\n * @example New instance of Component class:\n * const title = new Component({\n *   container: 'header',\n *   state: 'World',\n *   render: message => <h1>Hello, {message}!</h1>\n * })\n * @example Extending Component class:\n * class UserList extends Component {\n *   constructor(props) {\n *     super(props)\n *     this.state = users\n *     this.container = 'section'\n *   }\n *   render(users) {\n *     return (\n *      <ul class='user-list'>\n *        {\n *          users.map(user => <li>{user.name}</li>)\n *        }\n *      </ul>\n *     )\n *   }\n * }\n */\nexport class Component {\n  /**\n   * @description Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   * @constructs Component\n   */\n  constructor(props) {\n    if (!props) props = {}\n    /** @property {string} */\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      /** @property {Function} */\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      /** @property {boolean|number|string|object|array} */\n      this.state = props.state\n    }\n\n    /** @property {null, Object} */\n    this.oldNode = null\n    if (this.selector) {\n      /** @property {Element} */\n      this.container = document.querySelector(this.selector)\n    }\n    /** @property {boolean} */\n    this.componentShouldUpdate = true\n    \n    /** @property {boolean} */\n    this.mounted = false\n\n    /** \n     * @property {Element} \n     * @default {undefined}\n    */\n    this.element\n    \n    /**\n     * @description Handle lifecycle hooks.\n     */\n    if (props.componentWillMount || props.beforeCreateComponent) {\n      /** \n       * @type {Function} - A function to execute before the Component is created.\n       * @property Component#componentWillMount\n      */\n      this.componentWillMount = props.componentWillMount || props.beforeCreateComponent\n    }\n    if (this.beforeCreateComponent) {\n      /** \n       * @type {Function} - A function to execute before the Component is created.\n       * @property Component#componentWillMount\n       */\n      this.componentWillMount = this.beforeCreateComponent\n    }\n    if (props.componentDidMount || props.componentWasCreated) {\n      /** \n       * @type {Function} - A function to execute after the component is created.\n       * @property Component#componentDidMount\n       */\n      this.componentDidMount = props.componentDidMount || props.componentWasCreated\n    }\n    // Alias for React lifecycle hook:\n    if (this.componentWasCreated) {\n      /** \n       * @type {Function} - A function to execute after the component is created.\n       * @property Component#componentDidMount\n       */\n      this.componentDidMount = this.componentWasCreated\n    }\n    if (props.componentWillUpdate) {\n      /** \n       * @type {Function} - A function to execute before the component is updated.\n       * @property Component#componentWillUpdate\n       */\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      /** \n       * @type {Function} - A function to execute after the component is updated.\n       * @property Component#componentDidUpdate\n       */\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      /** \n       * @type {Function} - A function to execute before the component is destroyed.\n       * @property Component#componentWillUnmount\n       */\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * @description This is getter to access the component's state using the pseudo-private key dataStore.\n   * @returns {boolean|number|string|object|any[]} - The component's state\n   */\n  get state() {\n    return this[dataStore]\n  }\n\n  /**\n   * @description This is setter to define the component's state. It uses the dataStore object as a pseudo-private key.\n   * method\n   * @param {string|number|boolean|object|array} data - Data to set as comp0nent state. \n   * @returns {undefined} void\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n  \n  /**\n   * @description Method to set a component's state. This accepts simple types or Objects. If updating an array, you can pass in the data and the position (number) in the array to update. Optionally you can pass a callback. This receives the state as its argument. You need to return the state changes in order to update the component's state.\n   * @example\n   * this.setState(true)\n   * this.setState(0)\n   * this.setState({name: 'Joe'})\n   * this.setState([1,2,3])\n   * this.setState(prevState => prevState + 1)\n   * @property Component#setState\n   * @param {string|number|boolean|object|array|Function} data - The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   * @returns {undefined} void\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    } else if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          this.state = mixin(state[position], data)\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      this.state = mixin(state, data)\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * @description Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @property Component#update\n   * @param {boolean|number|string|object|array} [data]\n   * @returns {undefined} void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If componentShouldUpdate is set to false, render one time only.\n    // All other updates will be ignored.\n    if (!this.componentShouldUpdate && this.mounted) return\n\n    // If data is 0 or non-boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && data) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      if (this && JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n        return false\n      } else {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      elem = this.container && this.container.querySelector(`#${vdom.props.id}`)\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.componentWillMount && this.componentWillMount(this)\n      this.componentDidMount && this.componentDidMount(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * @description Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @property Component#unmount\n   * @returns {undefined} void\n   */\n  unmount() {\n    const self = this\n    const eventWhitelist = ['click', 'dblclick', 'mousedown','mouseup', 'mouseover','mouseout', 'mouseleave', 'select', 'input', 'change', 'keydown', 'keypress', 'keyup', 'submit']\n    if (!this.element) return\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    eventWhitelist.map(event => {\n      this.element.removeEventListener(event, this)\n    })\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n","import {h} from 'composi'\n\nexport default function HeroSearch({search, searchResults, blurSearchInput}) {\n  return (\n    <div id=\"search-component\">\n      <h4>Hero Search</h4>\n\n      <input id=\"search-box\" onkeyup={(e)=> search(e)} onblur={() => blurSearchInput()} />\n\n      {\n        searchResults.length > 0 && (\n          <ul class=\"search-result\">\n            {\n              searchResults.map(hero => (\n                <li>\n                  <a href={`#/detail/${hero.id}`}>{hero.name}</a>\n                </li>\n              ))\n            }\n          </ul>\n        )\n      }\n    </div>\n  )\n}\n","import {h, Component} from 'composi'\nimport HeroSearch from './hero-search'\n\nexport default function HeroDashboard({heroes, search, searchResults, blurSearchInput}) {\n  const selectHeroes = heroes.slice(1, 5)\n  return (\n    <div class='dashboard'>\n      <h3>Top Heroes</h3>\n      <div class=\"grid grid-pad\">\n        {\n          selectHeroes.map(hero => (\n            <a class=\"col-1-4\" href={`#/detail/${hero.id}`}>\n              <div class=\"module hero\">\n                <h4>{hero.name}</h4>\n              </div>\n            </a>\n          ))\n        }\n      </div>\n      <HeroSearch \n        search={search}\n        searchResults={searchResults}\n        blurSearchInput={blurSearchInput} />\n    </div>\n  )\n}\n","import {h, Component} from 'composi'\n\nexport default function HeroList({heroes, deleteItem, addHero}) {\n\n  return (\n    <div>\n      <p class='form--add-hero'>\n        <label htmlFor=\"add-hero\">Hero name: </label>\n        <input id='add-hero' type=\"text\"/>\n        <button onclick={addHero}>Add</button>\n      </p>\n      <ul class=\"heroes\">\n        {\n          heroes.map(hero => (\n            <li>\n              <a href={`#/detail/${hero.id}`}>\n                <span class=\"badge\">{hero.id}</span> \n                <span class='hero-link'>{hero.name}</span>\n              </a>\n              <button data-id={hero.id} class=\"delete\" title=\"delete hero\"\n              onclick={(e) => deleteItem(e)}>x</button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\n","import {h, Component} from 'composi'\n\nexport default function HeroDetail({hero, onHeroNameChange, resetName, saveName}) {\n  return (\n    <div id='hero-detail'>\n      <h2>{hero.name} details!</h2>\n      <div><label>id:</label> {hero.id}</div>\n      <div>\n        <label for='update-name'>name: </label>\n        <input id='update-name' placeholder={hero.name} oninput={(e) => onHeroNameChange(e)} />\n      </div>\n      <p class='hero-detail--buttons'>\n        <button onclick={resetName}>Reset</button>\n        <button onclick={saveName}>Save</button>\n      </p>\n    </div>\n  )\n}\n","/**\n  * Route type\n  * @constructor\n  *\n  * Creates a Route object for general use\n  * \n  * @param {String} path\n  * @param {type}   name\n  */\nfunction Router(w, isModule) {\n  let routes = []\n  let map = {}\n  let reference = 'router'\n  let oldReference = window[reference]\n  let oldUrl\n\n  class Route {\n    constructor(path, name) {\n      this.name = name\n      this.path = path\n      this.keys = []\n      this.fns = []\n      this.params = {}\n      this.pathToRegexp = (path, keys, sensitive, strict) => {\n        if (path instanceof RegExp) return path\n        if (path instanceof Array) path = '(' + path.join('|') + ')'\n        path = path\n          .concat(strict ? '' : '/?')\n          .replace(/\\/\\(/g, '(?:/')\n          .replace(/\\+/g, '__plus__')\n          .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional){\n            keys.push({ name: key, optional: !! optional })\n            slash = slash || ''\n            return '' + (optional ? '' : slash) + '(?:' + (optional ? slash : '') + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')' + (optional || '')\n          })\n          .replace(/([/.])/g, '\\\\$1')\n          .replace(/__plus__/g, '(.+)')\n          .replace(/\\*/g, '(.*)')\n        return new RegExp('^' + path + '$', sensitive ? '' : 'i')\n      }\n      this.regex = this.pathToRegexp(this.path, this.keys, false, false)\n    }\n\n    /**\n     * Adds a handler for \"this\" route\n     * \n     * @param {Function} fn\n     */\n    addHandler(fn) {\n      this.fns.push(fn)\n    }\n\n    /**\n     * Removes specific handler for this route\n     * \n     * @param  {Function} fn\n     * @return {void}\n     */\n    removeHandler(fn) {\n      for (let i = 0, c = this.fns.length; i < c; i++) {\n        let f = this.fns[i]\n        if (fn == f) {\n          this.fns.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    /**\n     * Executes this route with specified params\n     * \n     * @param  {Object} params\n     * @return {void}\n     */\n    run(params) {\n      for (let i = 0, c = this.fns.length; i < c; i++) {\n        if (this.fns[i].apply(this, params) === false)\n          return false\n      }\n      return true\n    }\n\n    /**\n     * Tests a path of this route and runs if it's successed\n     * @param  {String} path\n     * @param  {Object} params\n     * @return {Bool}\n     */\n    match(path, params){\n      let m = this.regex.exec(path)\n      if (!m) return false\n      for (let i = 1, len = m.length; i < len; ++i) {\n        let key = this.keys[i - 1]\n        let val = ('string' == typeof m[i]) ? decodeURIComponent(m[i]) : m[i]\n        if (key) {\n          this.params[key.name] = val\n        }\n        params.push(val)\n      }\n      return true\n    }\n  }\n\n  /**\n   * This is the main constructor for router object\n   * Creates a route or navigates it if second parameter is empty\n   * \n   * @param  {String}    path       name of to route to register or to navigate\n   * @param  {Function}  fn         callback founction for this route\n   * @returns {void}\n   */\n  const router = (path, fn) =>  {\n    let addHandler = (path, fn) => {\n      let s = path.split(' ')\n      let name = (s.length == 2) ? s[0] : null\n      path = (s.length == 2) ? s[1] : s[0]\n\n      if (!map[path]) {\n        map[path] = new Route(path, name)\n        routes.push(map[path])\n      }\n      map[path].addHandler(fn)\n    }\n    if (typeof fn == 'function') {\n      addHandler(path, fn)\n      router.reload()\n    } else if (typeof path == 'object') {\n      for (let p in path) {\n        addHandler(p, path[p])\n      }\n      router.reload()\n    } else if (typeof fn === 'undefined') {\n      router.navigate(path)\n    }\n  }\n\n  /**\n   * Removes specified handlerfor specified path\n   * Remeber that: one path can have multiple handlers/callbacks functions\n   * you should specify exact object that refers handler\n   * \n   * @param  {String}   path       target path to remove\n   * @param  {Function} fn         handler function\n   * @return {void}\n   */\n  router.remove = (path, fn) => {\n    let route = map[path]\n    if (!route)\n      return\n    route.removeHandler(fn)\n  }\n\n  /**\n   * Removes all handlers and routes\n   * \n   * @return {void}\n   */\n  router.removeAll = () => {\n    map = {}\n    routes = []\n    oldUrl = ''\n  }\n\n  /**\n   * Navigates current route to desired one\n   * \n   * @param  {String} path        target path to navigate\n   * @param  {Object} options     options for this navigate\n   * @return {void}\n   */\n  router.navigate = (path, options) => {\n    options = options || {}\n    let silent = options.silent || false\n\n    if (silent) {\n      removeListener()\n    }\n    setTimeout(() => {\n      window.location.hash = path\n\n      if (silent) {\n        setTimeout(() => addListener(), 1)\n      }\n\n    }, 1)\n  }\n\n  /**\n   * Creates a reference for prevent conflicts\n   * @return {Object}\n   */\n  router.noConflict = () => {\n    w[reference] = oldReference\n    return router\n  }\n\n  /**\n   * Reload the page without changing the hash\n   * @param {String} path \n   */\n  router.load = (path) => {\n    map[path].run()\n  }\n\n  /**\n   * Get the location hash\n   * @return {String}\n   */\n  const getHash = () => {\n    return window.location.hash.substring(1)\n  }\n\n  /**\n   * Checks to see if a hash matches a route\n   * @param {String} hash \n   * @param {String} route \n   */\n  const checkRoute = (hash, route) => {\n    let params = []\n    if (route.match(hash, params)) {\n      return (route.run(params) !== false ? 1 : 0)\n    }\n    return -1\n  }\n\n  /**\n   * Check whether location hash has changes\n   */\n  const hashChanged = router.reload = () => {\n    let hash = getHash()\n    for (let i = 0, c = routes.length; i < c; i++) {\n      let route = routes[i]\n      let state = checkRoute(hash, route)\n      if (state === 1) {\n        // route processed:\n        oldUrl = hash\n        break\n      } else if (state === 0){\n        // route rejected:\n        router.navigate(oldUrl, { silent:true })\n        break\n      }\n    }\n  }\n\n  /**\n   * Add haschange event listener\n   */\n  const addListener = () => {\n    if (w.addEventListener) {\n      w.addEventListener('hashchange', hashChanged, false)\n    } else {\n      w.attachEvent('onhashchange', hashChanged)\n    }\n  }\n\n  /**\n   * Remove hashchange event listener\n   */\n  const removeListener = () => {\n    if (w.removeEventListener) {\n      w.removeEventListener('hashchange', hashChanged)\n    } else {\n      w.detachEvent('onhashchange', hashChanged)\n    }\n  }\n\n  addListener()\n  oldUrl = getHash()\n\n  if (isModule){\n    return router\n  } else {\n    w[reference] = router\n  }\n\n}\n\nif (typeof module == 'undefined') {\n  Router(window)\n} else {\n  module.exports = Router(window, true)\n  module.exports.default = module.exports\n}\n","import {h, Component} from 'composi'\n\nexport default new Component ({\n  container: 'header',\n  state: 'Tour of Heroes',\n  render: (message) => <h1><a href=\"/\">{message}</a></h1>\n})\n","import {h, Component} from 'composi'\n\nexport default new Component({\n  container: 'section',\n  state: true,\n  render: (data) => {\n    return (\n      <nav>\n        <ul>\n          <li><a href=\"#/dashboard\">Dashboard</a></li>\n          <li><a href=\"#/heroes\">Heroes</a></li>\n        </ul>\n      </nav>\n    )\n  }\n})\n","import {h, render, Component} from 'composi'\nimport title from './components/title'\nimport menu from './components/menu'\nimport App from './components/app'\n\nconst app = new App()\n","import {h, render, Component} from 'composi'\nimport HeroDashboard from './hero-dashboard'\nimport HeroList from './hero-list'\nimport HeroDetail from './hero-detail'\nimport setupRoutes from '../utils/routes'\nimport fetchHeroes from '../utils/fetch-heroes'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props) \n    this.container = 'section'\n    this.state = {\n      activeComponent: 'dashboard',\n      heroes: [],\n      selectedHero: '',\n      searchResults: []\n    }\n  }\n\n  render(state) {\n\n    return (\n      <div class=\"app-root\">\n        {\n          state.activeComponent === 'dashboard' && \n            <HeroDashboard \n              heroes={this.state.heroes}\n              search={this.search.bind(this)}\n              searchResults={this.state.searchResults} \n              blurSearchInput={this.blurSearchInput.bind(this)} />\n        }\n        {\n          state.activeComponent === 'heroes' && \n            <HeroList \n              heroes={this.state.heroes} \n              deleteItem={this.deleteItem.bind(this)} \n              addHero={this.addHero.bind(this)} />\n        }\n        {\n          state.activeComponent === 'detail' && \n            <HeroDetail \n              hero={this.state.selectedHero} \n              deleteItem={this.deleteItem}\n              onHeroNameChange={this.onHeroNameChange.bind(this)} \n              resetName={this.resetName.bind(this)} \n              saveName={this.saveName.bind(this)} />\n        }\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    // Fetch data for heroes:\n    fetchHeroes()\n      .then(heroes => {\n        this.setState({heroes})\n      })\n    // Setup routes:\n    setupRoutes(this)\n  }\n\n  addHero(e) {\n    const input = e.target.parentNode.querySelector('#add-hero')\n    const value = input.value\n    if (value) {\n      const lastId = this.state.heroes[this.state.heroes.length -1].id\n      const newHero = {id: String(parseInt(lastId) + 1), name: value}\n      const heroes = this.state.heroes\n      heroes.push(newHero)\n      this.setState({heroes})\n      input.value = ''\n    }\n  }\n\n  deleteItem(e) {\n    const id = e.target.dataset.id\n    const heroes = this.state.heroes\n    const position = heroes.findIndex(hero => id == hero.id)\n    heroes.splice(position, 1)\n    this.setState({heroes})\n  }\n\n  onHeroNameChange(e) {\n    const value = e.target.value\n    if (value) {\n      const selectedHero = this.state.selectedHero\n      selectedHero.name = value\n      this.setState({selectedHero})\n    }\n  }\n\n  resetName(e) {\n    const selectedHero = this.state.selectedHero\n    selectedHero.name = selectedHero.originalName\n    this.setState({selectedHero})\n  }\n\n  saveName(e) {\n    window.location.hash = '#/heroes'\n  }\n\n  search(e) {\n    const input = e.target\n    const value = input.value\n    const heroes = this.state.heroes\n    const searchResults = heroes.filter(hero => {\n      const name = hero.name.toLowerCase()\n      return name.match(value.toLowerCase())\n    })\n    this.setState({searchResults: searchResults})\n  }\n\n  blurSearchInput(e) {\n    const searchResults = this.state.searchResults\n    setTimeout(() => {\n      this.setState({searchResults: []})\n    }, 250)\n  }\n}","import {Router} from 'composi-router'\n\nexport default function(app) {\n  router({\n    '/': function() {\n      app.setState({activeComponent: 'dashboard'})\n    },\n\n    '/dashboard': function() {\n      app.setState({activeComponent: 'dashboard'})\n    },\n\n    '/heroes': function() {\n      app.setState({activeComponent: 'heroes'})\n    },\n\n    '/detail/:id': function(id) {\n      const state = app.state\n      const position = state.heroes.findIndex(person => person.id === id)\n      const hero = state.heroes[position]\n      try {\n        hero.originalName = hero.name\n        app.setState({activeComponent: 'detail', selectedHero: hero})\n      } catch(err) {}\n    }\n  })\n}\n","// Fetch mock heroes:\nexport default function fetchHeroes() {\n  return fetch('/dev/data/mock-heroes.js')\n  .then(function(response) {\n    return response.json()\n  })\n}\n"],"names":["h","type","props","args","node","children","length","Array","isArray","shift","map","push","item","getKey","key","mixin","obj1","obj2","result","i","setProps","element","name","value","oldValue","style","toLowerCase","innerHTML","namespaceURI","setAttributeNS","setAttribute","removeAttribute","createElement","isSVG","document","createTextNode","createElementNS","keys","forEach","appendChild","child","removeElement","container","removeChild","patch","oldNode","newNode","diffAndPatch","nextSibling","insertBefore","oldProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","j","newChild","newKey","keyedNode","reusableNode","nodeValue","data","body","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","componentWillMount","beforeCreateComponent","componentDidMount","componentWasCreated","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","__data","__render","vdom","elem","id","parentNode","testIfVNodesDiffer","JSON","stringify","removeEventListener","event","undefined","update","unmount","_this2","HeroSearch","search","searchResults","blurSearchInput","onkeyup","e","onblur","class","href","hero","HeroDashboard","heroes","selectHeroes","slice","HeroList","deleteItem","addHero","htmlFor","onclick","data-id","title","HeroDetail","onHeroNameChange","resetName","saveName","for","placeholder","oninput","Router","w","isModule","routes","reference","oldReference","oldUrl","Route","path","fns","params","pathToRegexp","sensitive","strict","RegExp","join","concat","replace","_","slash","format","capture","optional","regex","fn","c","splice","apply","m","exec","val","decodeURIComponent","router","addHandler","s","split","reload","p","navigate","remove","route","removeHandler","removeAll","options","silent","location","hash","addListener","noConflict","load","run","getHash","substring","hashChanged","match","addEventListener","attachEvent","removeListener","detachEvent","message","module","exports","default","activeComponent","bind","selectedHero","app","fetch","then","response","json","findIndex","person","originalName","err","input","target","lastId","newHero","String","parseInt","dataset","filter"],"mappings":"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"}